version: '3.8'

services:

  traefik:
    image: traefik:2.10.4
    container_name: traefik
    command:
      - --entrypoints.http.address=:80
      - --entrypoints.https.address=:443
      - --providers.docker=true
      - --providers.docker.network=proxy

      - --certificatesresolvers.letsencrypt.acme.httpchallenge=true
      - --certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=http
      - --certificatesresolvers.letsencrypt.acme.email=${EMAIL}
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
    labels:
      - traefik.http.routers.to-https.rule=HostRegexp(`{host:.+}`)
      - traefik.http.routers.to-https.entrypoints=http
      - traefik.http.routers.to-https.middlewares=to-https
      - traefik.http.middlewares.to-https.redirectscheme.scheme=https
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./letsencrypt_data:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - proxy

  db:
    image: postgres:14.9-alpine
    container_name: db
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    env_file:
      - ./.env
    restart: always
    ports:
      - "5432:5432"
    labels:
      - traefik.enable=false
    networks:
      - proxy

  django:
    build: ./django-hallow-ethical-hacking
    container_name: django
    command: gunicorn --bind :8000 --workers 3 DjangoHallowEthicalHacking.wsgi 
    volumes:
      - django_static:/app/static
    env_file:
      - ./django-hallow-ethical-hacking/.env
    depends_on:
      - db
      - redis
    labels:
      - traefik.enable=false
    networks:
      - proxy

  celery:
    build: ./django-hallow-ethical-hacking
    container_name: celery
    command: celery -A DjangoHallowEthicalHacking worker -l info
    depends_on:
      - django
      - redis
    labels:
      - traefik.enable=false
    networks:
      - proxy

  celery-beat:
    build: ./django-hallow-ethical-hacking
    container_name: celery-beat
    command: celery -A DjangoHallowEthicalHacking beat -l info
    depends_on:
      - django
      - redis
    labels:
      - traefik.enable=false
    networks:
      - proxy

  redis:
    image: redis:7.2.1-alpine
    container_name: redis
    volumes:
      - ./redis_data:/data
    labels:
      - traefik.enable=false
    networks:
      - proxy

  vue:
    build:
      context: ./vue-hallow-ethical-hacking
      dockerfile: ./Dockerfile
    container_name: vue
    volumes:
      - vue_dst:/app/dist
    depends_on:
      - django
    labels:
      - traefik.enable=false
    networks:
      - proxy

  nginx:
    build:
      context: ./nginx
      dockerfile: ./Dockerfile
    container_name: nginx
    volumes:
      - django_static:/usr/share/nginx/html/static
      - vue_dst:/usr/share/nginx/html
    restart: always
    depends_on: 
      - django
      - vue
    labels:
      - traefik.enable=true
      - traefik.http.routers.nginx.rule=Host(`${DOMAIN}`)
      - traefik.http.routers.nginx.entrypoints=https
      - traefik.http.routers.nginx.tls=true
      - traefik.http.routers.nginx.tls.certresolver=letsencrypt
      - traefik.http.services.nginx.loadbalancer.server.port=80
      - traefik.docker.network=proxy
    networks:
      - proxy

volumes:
  django_static:
  vue_dst:

networks:
  proxy:
